package com.ats.abongda.nvs.activity;

import java.util.ArrayList;
import java.util.List;

import com.ats.NIEN.abongda.R;
import com.ats.NIEN.abongda.R.anim;
import android.annotation.SuppressLint;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.view.ViewPager.PageTransformer;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.FrameLayout;
import android.widget.LinearLayout;

import com.ats.NIEN.abongda.UTIL.ActionCode;
import com.ats.abongda.nvs.fragment.BaseFragment;
import com.ats.abongda.nvs.fragment.MAINVIEW_MenuFragment;
import com.ats.abongda.nvs.fragment.PagerFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_BetFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_ChangeProfile;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_ChangepassFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_ClubDetailFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_ClubTeamFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_LeagueTimeClubFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_MailBoxFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_MailDetail;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_MatchDetailFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_NewsDetailFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_PlayerDetailFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_SigninFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_SignupFragment;
import com.ats.abongda.nvs.fragment.FSCR.FSCR_TopUserCoinFragment;
import com.ats.abongda.nvs.fragment.LIVE.LIVE_LiveFragment;
import com.ats.abongda.nvs.fragment.LIVE.LIVE_NewsFragment;
import com.ats.abongda.nvs.fragment.LIVE.LIVE_Next24Fragment;
import com.ats.abongda.nvs.fragment.TAIKHOAN.TAIKHOAN_BetLogFragment;
import com.ats.abongda.nvs.fragment.TAIKHOAN.TAIKHOAN_HistoryFragment;
import com.ats.abongda.nvs.fragment.TAIKHOAN.TAIKHOAN_ProfileFragment;
import com.ats.abongda.nvs.fragment.TAIKHOAN.TAIKHOAN_StatisticFragment;
import com.ats.abongda.nvs.fragment.TTGD.TTGD_LeagueRankingFragment;
import com.ats.abongda.nvs.fragment.TTGD.TTGD_LeagueTimeFragment;
import com.ats.abongda.nvs.fragment.TTGD.TTGD_StatisticFragment;

@SuppressLint("NewApi")
public class MainActivity extends BaseActivity implements ActionCode,
		OnClickListener {
	SharedPreferences sharePreference;
	private Fragment mContent;
	private FrameLayout frameView;
	private pageType mPageType = pageType.LIVE_TYPE;
	private Boolean mTabStatus = true;
	public MainActivity() {
		super(R.string.app_name);

	}

	@SuppressLint("NewApi")
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		mContent = new PagerFragment();
		this.sharePreference = getSharedPreferences(
				"AUTHENTICATION_FILE_NAME", Context.MODE_PRIVATE);

		// set content for main view
		setContentView(R.layout.content_frame);
		this.frameView = (FrameLayout) findViewById(R.id.content_frame);


		getSupportFragmentManager().beginTransaction()
				.replace(R.id.content_frame, mContent).commit();

		// set content for menu view
		setBehindContentView(R.layout.menu_frame);
		getSupportFragmentManager().beginTransaction()
				.replace(R.id.menu_frame, new MAINVIEW_MenuFragment()).commit();

	}
	
	public void refreshPage(int pos){
		((PagerFragment) mContent).refreshPage(pos);
	}

	@Override
	public void onAttachedToWindow() {
		// TODO Auto-generated method stub
		super.onAttachedToWindow();
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
	}

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		Log.d("BA Log", "resume main act");
	}

	@Override
	public void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
		// getSupportFragmentManager().putFragment(outState, "mContent",
		// mContent);
	}

	public void switchContent(final int mActionCode, final List<Object> mArgs) {
		isClosingApp = false;
		mContent = setmContent(mActionCode, mArgs);
		if (mPageType == pageType.TAIKHOAN_TYPE || mActionCode == MAILBOX || mActionCode == BETPAGE) {
			int currentUserId = sharePreference.getInt("CURRENT_USER_ID", -1);
			if (currentUserId == -1) {
				mContent = new FSCR_SigninFragment(SIGNIN,new ArrayList<Object>(){/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

				{
					add(mActionCode);
					add(mArgs);
				}});	
			}
		}
		FragmentManager fm = getSupportFragmentManager();
		fm.beginTransaction()
				.setCustomAnimations(anim.slide_in_left, anim.slide_out_right,
						anim.slide_out_left, anim.slide_in_right)
				.replace(R.id.content_frame, mContent,
						 "code")
				.addToBackStack("code").commit();
		getSlidingMenu().showContent();
	}
	
	public void switchContentWithoutAddingToBackstack(final int mActionCode, final List<Object> mArgs) {
		isClosingApp = false;
		mContent = setmContent(mActionCode, mArgs);
		if (mPageType == pageType.TAIKHOAN_TYPE || mActionCode == MAILBOX || mActionCode == BETPAGE) {
			int currentUserId = sharePreference.getInt("CURRENT_USER_ID", -1);
			if (currentUserId == -1) {
				mContent = new FSCR_SigninFragment(SIGNIN,new ArrayList<Object>(){/**
					 * 
					 */
					private static final long serialVersionUID = 1L;

				{
					add(mActionCode);
					add(mArgs);
				}});	
			}
			
		}
		FragmentManager fm = getSupportFragmentManager();
		fm.beginTransaction()
				.setCustomAnimations(anim.slide_in_left, anim.slide_out_right,
						anim.slide_out_left, anim.slide_in_right)
				.replace(R.id.content_frame, mContent,
						"code").commit();
		getSlidingMenu().showContent();
	}

	public void switchContent(BaseFragment fragment) {
		isClosingApp = false;
		mContent = fragment;
		FragmentManager fm = getSupportFragmentManager();
		fm.beginTransaction()
				.setCustomAnimations(anim.slide_in_left, anim.slide_out_right,
						anim.slide_out_right, anim.slide_in_left)
				.replace(R.id.content_frame, fragment,
						fragment.getActionCode() + "")
				.addToBackStack(mContent.getTag()).commit();
		getSlidingMenu().showContent();
	}

	public void switchContentWithoutBackstack(BaseFragment fragment) {
		mContent = fragment;
		getSupportFragmentManager()
				.beginTransaction()
				.setCustomAnimations(anim.slide_in_left, anim.slide_out_right,
						anim.slide_in_right, anim.slide_out_left)
				.replace(R.id.content_frame, fragment,
						fragment.getActionCode() + "").commit();
		getSlidingMenu().showContent();
	}

/*	public void hideTabview() {
		Log.d("MACTIVITY", ">> " + mTabStatus);
		if (!mTabStatus) {
			return;
		}
		mTabStatus = false;
		TranslateAnimation animate = new TranslateAnimation(0, 0, 0,
				tabView.getHeight());
		animate.setDuration(500);
		animate.setFillAfter(true);
		tabView.startAnimation(animate);
		tabView.setVisibility(View.INVISIBLE);
	}*/

/*	public void showTabview() {
		Log.d("MACTIVITY", "> " + mTabStatus);
		if (mTabStatus) {
			return;
		}
		mTabStatus = false;
		TranslateAnimation animate = new TranslateAnimation(0, 0,
				tabView.getHeight(), 0);
		animate.setDuration(500);
		animate.setFillAfter(true);
		tabView.startAnimation(animate);
		tabView.setVisibility(View.VISIBLE);
		
	}*/
/*
	@SuppressLint("InflateParams")
	public void changeTabType(pageType type) {
		if (type == pageType.FULLSCR_TYPE) {
			hideTabview();
			mPageType = pageType.FULLSCR_TYPE;
			return;
		}
		else{
			if (type == pageType.FULLSCR_TYPE) {
				this.tabView = (LinearLayout) getLayoutInflater().inflate(
						R.layout.menu_live, null);
				mPageType = pageType.LIVE_TYPE;
				tabView.findViewById(R.id.tab_n0).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n1).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n2).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n3).setOnClickListener(this);
			} else if (type == pageType.TAIKHOAN_TYPE) {
				this.tabView = (LinearLayout) getLayoutInflater().inflate(
						R.layout.menu_account, null);
				mPageType = pageType.TAIKHOAN_TYPE;
				tabView.findViewById(R.id.tab_n0).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n1).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n2).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n3).setOnClickListener(this);
			} else if (type == pageType.TTGD_TYPE) {
				this.tabView = (LinearLayout) getLayoutInflater().inflate(
						R.layout.menu_league, null);
				mPageType = pageType.TTGD_TYPE;
				tabView.findViewById(R.id.tab_n0).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n1).setOnClickListener(this);
				tabView.findViewById(R.id.tab_n2).setOnClickListener(this);
			}
			((LinearLayout) findViewById(R.id.content_tab)).removeAllViews();
			((LinearLayout) findViewById(R.id.content_tab)).addView(tabView);
			this.tabView.findViewById(R.id.tab_n0).setOnClickListener(this);
			this.tabView.findViewById(R.id.tab_n1).setOnClickListener(this);
			this.tabView.findViewById(R.id.tab_n2).setOnClickListener(this);
			this.tabView.findViewById(R.id.tab_n3).setOnClickListener(this);
			showTabview();
		}
	}*/

/*	public void changeTab(int tabPos) {
		View t0, t1, t2, t3;
		t0 = tabView.findViewById(R.id.tab_n0);
		t1 = tabView.findViewById(R.id.tab_n1);
		t2 = tabView.findViewById(R.id.tab_n2);
		t3 = tabView.findViewById(R.id.tab_n3);
		t0.setBackground(getResources().getDrawable(R.drawable.border_menu_2));
		t1.setBackground(getResources().getDrawable(R.drawable.border_menu_2));
		t2.setBackground(getResources().getDrawable(R.drawable.border_menu_2));
		if (t3 != null) {
			t3.setBackground(getResources().getDrawable(
					R.drawable.border_menu_2));
		}
		switch (tabPos) {
		case 0:
			t0.setBackground(getResources().getDrawable(
					R.drawable.border_menu_1));
			break;
		case 1:
			t1.setBackground(getResources().getDrawable(
					R.drawable.border_menu_1));
			break;
		case 2:
			t2.setBackground(getResources().getDrawable(
					R.drawable.border_menu_1));
			break;
		case 3:
			t3.setBackground(getResources().getDrawable(
					R.drawable.border_menu_1));
			break;

		default:
			break;
		}
	}*/

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		Log.d("ONCLICK", "MainACT: " + v.getId());

	}
	
	/*private void signin(final int actionCode, final List<Object> mArgs){
		int currentUserId = sharePreference.getInt("CURRENT_USER_ID", -1);
		if (currentUserId == -1) {
			switchContent(SIGNIN, new ArrayList<Object>(){*//**
				 * 
				 *//*
				private static final long serialVersionUID = 1L;

			{
				add(actionCode);
				add(mArgs);
			}});
		}
		
	}*/

	public BaseFragment setmContent(int actionCode, List<Object> mArgs) {
		BaseFragment bf = null;
		switch (actionCode) {


		case ACCOUNTPROFILE:
			
			bf = new TAIKHOAN_ProfileFragment(mArgs);
			break;
		case ACCOUNTHISTORY:
			bf = new TAIKHOAN_HistoryFragment(mArgs);
			break;
		case ACCOUNTBETLOG:
			bf = new TAIKHOAN_BetLogFragment(mArgs);
			break;
		case ACCOUNTSTATISTIC:
			bf = new TAIKHOAN_StatisticFragment(mArgs);
			break;

		case LEAGUETIME:
			bf = new TTGD_LeagueTimeFragment(mArgs);
			break;
		case LEAGUERANKING:
			bf = new TTGD_LeagueRankingFragment(mArgs);
			break;
		case LEAGUESTATISTIC:
			bf = new TTGD_StatisticFragment(mArgs);
			break;

		case NEWSDETAIL:
			bf = new FSCR_NewsDetailFragment(mArgs);
			break;
		case SIGNIN:
			bf = new FSCR_SigninFragment(mArgs);
			break;
		case SIGNUP:
			bf = new FSCR_SignupFragment(mArgs);
			break;
		case CHANGEPASS:
			bf = new FSCR_ChangepassFragment(mArgs);
			break;
		case CHANGEPROFILE:
			bf = new FSCR_ChangeProfile(mArgs);
			break;
		case MAILBOX:
			bf = new FSCR_MailBoxFragment(mArgs);
			break;
		case MAILDETAIL:
			bf = new FSCR_MailDetail(mArgs);
			break;
		case TOPUSERCOIN:
			bf = new FSCR_TopUserCoinFragment(mArgs);
			break;
		case TOPUSERBET:
			bf = new FSCR_TopUserCoinFragment(mArgs);
			break;
		case LEAGUETIMECLUB:
			bf = new FSCR_LeagueTimeClubFragment(mArgs);
			break;
		case MATCHDETAIL:
			bf = new FSCR_MatchDetailFragment(mArgs);
			break;
		case BETPAGE:
			bf = new FSCR_BetFragment(mArgs);
			break;
		case CLUBDETAIL:
			bf = new FSCR_ClubDetailFragment(mArgs);
			break;
		case CLUBTEAM:
			bf = new FSCR_ClubTeamFragment(mArgs);
			break;
		case PLAYERDETAIL:
			bf = new FSCR_PlayerDetailFragment(mArgs);
			break;

		}
		return bf;
	}

}
